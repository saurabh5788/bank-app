<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans  
	http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- This produces a container-managed EntityManagerFactory; rather than 
		application-managed EntityManagerFactory as in case of LocalEntityManagerFactoryBean -->
	<bean id="entityManagerFactoryBean"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="persistenceUnit" />
		<!-- This makes /META-INF/persistence.xml is no longer necessary -->
		<property name="packagesToScan" ref="packagesToScan" />
		<!-- JpaVendorAdapter implementation for Hibernate EntityManager. Exposes 
			Hibernate's persistence provider and EntityManager extension interface -->
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>		
	<!-- If Provider is Hibernate and hibernate.properties is configured in 
		class path then underlying Hibernate will load itself the required properties.
		Still if they are mentioned here also then it will override So here only 
		Non Hibernate specific properties to be mentioned -->	
		<!--<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
			</props>
		</property>-->
	</bean>
	<!-- This transaction manager is appropriate for applications that use a 
		single JPA EntityManagerFactory for transactional data access. JTA (usually 
		through JtaTransactionManager) is necessary for accessing multiple transactional 
		resources within the same transaction. -->
	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactoryBean" />
		<!-- If the EntityManagerFactory uses a known DataSource as its connection 
			factory,the DataSource will be auto-detected: You can still explicitly specify 
			theDataSource, but you don't need to in this case. -->
		<!--<property name="dataSource" ref="dataSource" /> -->

	</bean>
	<bean
		class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
		<!--<property name="defaultPersistenceUnitName" value="entityManagerFactoryBean"/> -->
	</bean>
</beans>